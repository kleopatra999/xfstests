#! /bin/bash
# FS QA Test 403
#
# Test racing getxattr requests against large xattr add and remove loop. This
# reproduces a bug on XFS where a getxattr of an existing attribute spuriously
# returned failure due to races with attribute fork conversion.
#
#-----------------------------------------------------------------------
# Copyright (c) 2017 Red hat, Inc.  All Rights Reserved.
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it would be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write the Free Software Foundation,
# Inc.,  51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
#-----------------------------------------------------------------------
#

seq=`basename $0`
seqres=$RESULT_DIR/$seq
echo "QA output created by $seq"

here=`pwd`
tmp=/tmp/$$
status=1	# failure is the default!
trap "_cleanup; exit \$status" 0 1 2 3 15

_cleanup()
{
	cd /
	rm -f $tmp.*
}

# get standard environment, filters and checks
. ./common/rc
. ./common/attr

# remove previous $seqres.full before test
rm -f $seqres.full

# real QA test starts here

# Modify as appropriate.
_supported_fs generic
_supported_os Linux
_require_scratch
_require_attrs

_scratch_mkfs > $seqres.full 2>&1 || _fail "mkfs"
_scratch_mount || _fail "mount"

# create xattr small enough for local format on XFS
touch $SCRATCH_MNT/file
$SETFATTR_PROG -n trusted.small -v a $SCRATCH_MNT/file

# start a background getxattr loop for the existing xattr
while [ true ]; do
	$GETFATTR_PROG --absolute-names -n trusted.small $SCRATCH_MNT/file \
		> /dev/null || break
done &
getfattr_pid=$!

# while the above is spinning, add and remove a large attribute to cause back
# and forth inode attribute fork conversion
largeval=`for i in $(seq 0 511); do echo -n a; done`
for i in $(seq 0 99); do
	$SETFATTR_PROG -n trusted.big -v $largeval $SCRATCH_MNT/file
	$SETFATTR_PROG -x trusted.big $SCRATCH_MNT/file
done

kill -9 $getfattr_pid > /dev/null 2>&1
wait > /dev/null 2>&1

echo Silence is golden

# success, all done
status=0
exit
